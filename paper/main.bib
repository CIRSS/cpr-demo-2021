@Misc{Binder_2018,
  author = 	 {Jupyter-Project},
  title = 	 {{Binder 2.0 - Reproducible, Interactive, Sharable Environments for Science at Scale}},
  howpublished = {17th Python in Science Conference},
  year = 	 2018}

@article{brinckman2019computing,
  title = {{Computing Environments for Reproducibility: {{Capturing}} the ``{{Whole Tale}}''}},
  volume = {94},
  issn = {0167-739X},
  shorttitle = {Computing Environments for Reproducibility},
  abstract = {The act of sharing scientific knowledge is rapidly evolving away from traditional articles and presentations to the delivery of executable objects that integrate the data and computational details (e.g., scripts and workflows) upon which the findings rely. This envisioned coupling of data and process is essential to advancing science but faces technical and institutional barriers. The Whole Tale~project aims to address these barriers by connecting computational, data-intensive research efforts with the larger research process\textemdash{}transforming the knowledge discovery and dissemination process into one where data products are united with research articles to create ``living publications'' or tales. The Whole Tale~focuses on the full spectrum of science, empowering users in the long tail of science, and power users with demands for access to big data and compute resources. We report here on the design, architecture, and implementation of the Whole Tale~environment.},
  urldate = {2019-02-18},
  journal = {FGCS}, 
  author = {Brinckman, Adam and Chard, Kyle and Gaffney, Niall and Hategan, Mihael and Jones, Matthew B. and Kowalik, Kacper and Kulasekaran, Sivakumar and Lud\"ascher, Bertram and Mecum, Bryce D. and Nabrzyski, Jarek and Stodden, Victoria and Taylor, Ian J. and Turk, Matthew J. and Turner, Kandace},
  year = {2019},
  keywords = {Provenance,Code sharing,Data sharing,Living publications,Reproducibility},
  pages = {854-867},
  file = {/Users/ludaesch/Dropbox/zotero/storage/KLFKJKA6/Brinckman et al. - 2019 - Computing environments for reproducibility Captur.pdf;/Users/ludaesch/Dropbox/zotero/storage/KUSYCIYQ/Brinckman et al. - 2018 - Computing environments for reproducibility Captur.pdf;/Users/ludaesch/Dropbox/zotero/storage/J6LW73BC/S0167739X17310695.html;/Users/ludaesch/Dropbox/zotero/storage/TQXF6RVN/S0167739X17310695.html}
}
@INPROCEEDINGS{9041738,
  author={Chard, Kyle and Gaffney, Niall and Jones, Matthew B. and Kowalik, Kacper and Ludäscher, Bertram and McPhillips, Timothy and Nabrzyski, Jarek and Stodden, Victoria and Taylor, Ian and Thelen, Thomas and Turk, Matthew J. and Willis, Craig},
  booktitle={2019 15th International Conference on eScience (eScience)}, 
  title={Application of BagIt-Serialized Research Object Bundles for Packaging and Re-Execution of Computational Analyses}, 
  year={2019},
  volume={},
  number={},
  pages={514-521},
  doi={10.1109/eScience.2019.00068}}

@article{rampin_reprozip_2016,
	title = {{ReproZip}: {The} {Reproducibility} {Packer}},
	volume = {1},
	issn = {2475-9066},
	shorttitle = {{ReproZip}},
	abstract = {Rampin et al, (2016), ReproZip: The Reproducibility Packer, Journal of Open Source Software, 1(8), 107, doi:10.21105/joss.00107},
	language = {en},
	number = {8},
	urldate = {2021-04-24},
	journal = {Journal of Open Source Software},
	author = {Rampin, Rémi and Chirigati, Fernando and Shasha, Dennis and Freire, Juliana and Steeves, Vicky},
	year = {2016},
	pages = {107}
}

@misc{provone_2015,
	title = {{ProvONE}: {A} {PROV} {Extension} {Data} {Model} for {Scientific} {Workflow} {Provenance}},
	urldate = {2015-05-14},
	publisher = {DataONE},
	author = {Cuevas-Vicenttín, Victor and Ludäscher, Bertram and Missier, Paolo and Belhajjame, Khalid and Chirigati, Fernando and Wei, Yaxing and Dey, Saumen and Kianmajd, Parisa and Koop, David and Bowers, Shawn and Altintas, Ilkay and Jones, Christopher and Jones, Matthew B. and Walker, Lauren and Slaughter, Peter and Leinfelder, Benjamin},
	year = {2015},
	keywords = {provenance}
}

@book{reproducibilitynas,
  title = {Reproducibility and Replicability in Science},
  publisher = {{The National Academies Press}},
  author = {{Committee on Reproducibility {and} Replicability in Science}},
  year = {2019}
}

@article{Willis2020Trust,
journal = {Harvard Data Science Review},
number = {4},
title = {Trust but Verify: How to Leverage Policies, Workflows, and Infrastructure to Ensure Computational Reproducibility in Publication},
volume = {2},
author = {Willis, Craig and Stodden, Victoria},
date = {2020-12-16},
year = {2020},
month = {12},
day = {16},
}

@article{that_sciunits_2017,
        title = {Sciunits: {Reusable} {Research} {Objects}},
        shorttitle = {Sciunits},
        abstract = {Science is conducted collaboratively, often requiring knowledge sharing about computational experiments. When experiments include only datasets, they can be shared using Uniform Resource Identiï¬ers (URIs) or Digital Object Identiï¬ers (DOIs). An experiment, however, seldom includes only datasets, but more often includes software, its past execution, provenance, and associated documentation. The Research Object has recently emerged as a comprehensive and systematic method for aggregation and identiï¬cation of diverse elements of computational experiments. While a necessary method, mere aggregation is not sufï¬cient for the sharing of computational experiments. Other users must be able to easily recompute on these shared research objects. In this paper, we present the sciunit, a reusable research object in which aggregated content is recomputable. We describe a Git-like client that efï¬ciently creates, stores, and repeats sciunits. We show through analysis that sciunits repeat computational experiments with minimal storage and processing overhead. Finally, we provide an overview of sharing and reproducible cyberinfrastructure based on sciunits gaining adoption in the domain of geosciences.},
        language = {en},
        urldate = {2021-04-24},
        journal = {arXiv:1707.05731 [cs]},
        author = {That, Dai Hai Ton and Fils, Gabriel and Yuan, Zhihao and Malik, Tanu},
        month = sep,
        year = {2017},
        note = {arXiv: 1707.05731},
        keywords = {Computer Science - Digital Libraries},
        file = {That et al. - 2017 - Sciunits Reusable Research Objects.pdf:C\:\\Users\\tmcphill\\Zotero\\storage\\3UUVWT23\\That et al. - 2017 - Sciunits Reusable Research Objects.pdf:application/pdf}
}

@inproceedings{pasquier-socc2017,
	title = {Practical Whole-System Provenance Capture},
	booktitle = {Symposium on Cloud Computing (SoCC{\textquoteright}17)},
	year = {2017},
	organization = {ACM},
	author = {Pasquier, Thomas and Xueyuan Han and Goldstein, Mark and Moyer, Thomas and Eyers, David and Margo Seltzer and Bacon, Jean}
}

@inproceedings{pimentel_fine-grained_2016,
        address = {Cham},
        series = {Lecture {Notes} in {Computer} {Science}},
        title = {Fine-{Grained} {Provenance} {Collection} over {Scripts} {Through} {Program} {Slicing}},
        abstract = {Collecting provenance from scripts is often useful for scientists to explain and reproduce their scientific experiments. However, most existing automatic approaches capture provenance at coarse-grain, for example, the trace of user-defined functions. These approaches lack information of variable dependencies. Without this information, users may struggle to identify which functions really influenced the results, leading to the creation of false-positive provenance links. To address this problem, we propose an approach that uses dynamic program slicing for gathering provenance of Python scripts. By capturing dependencies among variables, it is possible to expose execution paths inside functions and, consequently, to create a provenance graph that accurately represents the function activations and the results they affect.},
        language = {en},
        booktitle = {Provenance and {Annotation} of {Data} and {Processes}},
        publisher = {Springer International Publishing},
        author = {Pimentel, JoÃ£o Felipe and Freire, Juliana and Murta, Leonardo and Braganholo, Vanessa},
        editor = {Mattoso, Marta and Glavic, Boris},
        year = {2016},
        pages = {199--203}
}